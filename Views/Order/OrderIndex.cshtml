@section topCSS{

}




<div class="col-sm-6">
    <h1 class="m-0">Starter Page</h1>
</div>
<div class="col-sm-6">
    <ol class="breadcrumb float-sm-right">
        <li class="breadcrumb-item"><a href="~/Home/Index">Home</a></li>
        <li class="breadcrumb-item active">Starter Page</li>
    </ol>
</div>

<div class="col-12">

    <div id="Order-Index" class="container">
        <h1>商品列表</h1>

        <!-- User Interface controls -->
        <b-row>
            <b-col lg="6" class="my-1">
                <b-form-group label="Filter"
                              label-for="filter-input"
                              label-cols-sm="3"
                              label-align-sm="right"
                              label-size="sm"
                              class="mb-0">
                    <b-input-group size="sm">
                        <b-form-input id="filter-input"
                                      v-model="filter"
                                      type="search"
                                      placeholder="Type to Search"></b-form-input>

                        <b-input-group-append>
                            <b-button :disabled="!filter" v-on:click="filter = ''">Clear</b-button>
                        </b-input-group-append>
                    </b-input-group>
                </b-form-group>
            </b-col>
        </b-row>

        <!-- Main table element -->
        <b-table :busy="isBusy"
                 :items="items"
                 :fields="fields"
                 :current-page="currentPage"
                 :per-page="perPage"
                 :filter="filter"
                 :filter-included-fields="filterOn"
                 :sort-by.sync="sortBy"
                 :sort-desc.sync="sortDesc"
                 :sort-direction="sortDirection"
                 stacked="md"
                 show-empty
                 small
                 v-on:filtered="onFiltered">
            @*<template #cell(name)="row">
                    {{ row.value.first }} {{ row.value.last }}
                </template>*@

            <template #table-busy>
                <div class="text-center text-danger my-2">
                    <b-spinner class="align-middle"></b-spinner>
                    <strong>Loading...</strong>
                </div>
            </template>

            <template #cell(actions)="row">
                <b-button size="sm" v-on:click="info(row.item, row.index, $event.target)" class="mr-1">
                    編輯
                </b-button>
                <b-button size="sm" v-on:click="row.toggleDetails">
                    {{ row.detailsShowing ? '收起' : '展開' }} 明細
                </b-button>
            </template>

            <template #row-details="row">
                <b-card>
                    <ul>
                        <li v-for="(value, key) in row.item" :key="key">{{ key }}: {{ value }}</li>
                    </ul>
                </b-card>
            </template>
        </b-table>
        <div v-show="isError">發生不明錯誤</div>

        <!-- Info modal -->
        <b-modal :id="infoModal.id" :title="infoModal.title" ok-only v-on:hide="resetInfoModal">
            <pre>{{ infoModal.content }}</pre>
        </b-modal>
    </div>
</div>
<!-- /.col -->




@section endJS{
    <script>
        var OrderApp = new Vue({
            el: "#Order-Index",
            data: {
                isError: false,
                isBusy: true,
                items: [],
                fields: [
                    { key: 'name', label: '名稱' },
                    { key: 'unitPrice', label: '單價' },
                    { key: 'stock', label: '庫存' },
                    //{
                    //    key: 'isActive',
                    //    label: 'Is Active',
                    //    formatter: (value, key, item) => {
                    //        return value ? 'Yes' : 'No'
                    //    },
                    //    sortable: true,
                    //    sortByFormatted: true,
                    //    filterByFormatted: true
                    //},
                    { key: 'actions', label: '功能' }
                ],
                totalRows: 1,
                currentPage: 1,
                perPage: 5,
                pageOptions: [5, 10, 15, { value: 100, text: "Show a lot" }],
                sortBy: '',
                sortDesc: false,
                sortDirection: 'asc',
                filter: null,
                filterOn: [],
                infoModal: {
                    id: 'info-modal',
                    title: '',
                    content: ''
                }
            },
            created: function () {
                axios.get('/api/Order/GetAll')
                    .then((res) => {
                        console.log(res);
                        this.items = res.data.result;
                        this.isBusy = false;
                    })
            },
            computed: {
                sortOptions() {
                    // Create an options list from our fields
                    return this.fields
                        .filter(f => f.sortable)
                        .map(f => {
                            return { text: f.label, value: f.key }
                        })
                }
            },
            mounted() {
                // Set the initial number of items
                this.totalRows = this.items.length
            },
            methods: {
                info(item, index, button) {
                    this.infoModal.title = `Row index: ${index}`
                    this.infoModal.content = JSON.stringify(item, null, 2)
                    this.$root.$emit('bv::show::modal', this.infoModal.id, button)
                },
                resetInfoModal() {
                    this.infoModal.title = ''
                    this.infoModal.content = ''
                },
                onFiltered(filteredItems) {
                    // Trigger pagination to update the number of buttons/pages due to filtering
                    this.totalRows = filteredItems.length
                    this.currentPage = 1
                }
            },
        })
    </script>
}